<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>
<!-- xml 이름상관 없음. *.xml로 설정했으니까 -->
<!-- 이 xml이 어떤 interface와 연결되는지 설정 -->
<mapper namespace="com.gong.gu.dao.MypageDAO">

	<select id="orderlist" resultType="hashmap">
		SELECT 
		oi.order_no, oi.order_date, b.board_title, ga.groupbuy_state, oi.order_state , oi.order_quantity , oi.order_etc
		FROM order_info oi INNER JOIN board b USING (board_no) INNER JOIN groupbuy_addit ga USING (board_no) WHERE oi.user_id = #{param1}
	</select>

	<select id="inquirelist" resultType="hashmap">
		SELECT * FROM board INNER JOIN inquiry_addit USING (board_no) WHERE user_id = #{param1}
	</select>

	<select id="requirelist" resultType="hashmap">
		SELECT * FROM board INNER JOIN require_addit USING (board_no) WHERE user_id = #{param1}
	</select>
	
	
	<select id="login_temp" resultType="string">
	select user_id from user_info WHERE user_id=#{param1} AND user_pw = #{param2}
	</select>
	
	
	<select id="myprofile" resultType="com.gong.gu.dto.MemberDTO">
	select * from user_info where user_id = #{param1}
	</select>
	
	
	
	<!-- 임시, 혹은 다른 서비스에 관한것 -->
	<select id="orderDetail" resultType="hashmap">
	SELECT 
	oi.order_name , oi.order_address, oi.order_phone, oi.order_no, oi.order_date,oi.order_state , oi.order_quantity , 
	b.board_no , b.board_title, 
	ga.groupbuy_state, ga.groupbuy_unitprice
	FROM order_info oi INNER JOIN board b 
	USING (board_no) 
	INNER JOIN groupbuy_addit ga 
	USING (board_no) WHERE oi.order_no = #{param1};	
	</select>	
	
	
	<update id="ordercancel">
	UPDATE order_info SET order_state = '취소완료' WHERE order_no = #{param1}
	
	</update>

	<insert id="groupbuywrite2"
		useGeneratedKeys="true"
		keyColumn="board_no"
		keyProperty="board_no"
		parameterType="com.gong.gu.dto.BoardDTO">
		INSERT INTO board(user_id,board_title,board_content,board_name)VALUES(#{user_id},#{board_title},#{board_content},#{board_name})
	</insert>
	
	<insert id="groupbuywrite2_gba"
		parameterType="com.gong.gu.dto.Groupbuy_additDTO">
		INSERT INTO groupbuy_addit(board_no,groupbuy_unitprice,groupbuy_max,groupbuy_due_date,product_category_name,groupbuy_target)
		VALUES(#{board_no},#{groupbuy_unitprice},#{groupbuy_max},#{groupbuy_due_date},#{product_category_name},#{groupbuy_target})
	</insert>	

	<insert id="groupbuywrite2_pho"
		parameterType="com.gong.gu.dto.PhotoDTO">
		INSERT INTO photo(board_no,photo_newname,photo_thum)
		VALUES(#{board_no},#{photo_newname},#{photo_thum})
	</insert>	
	
	<select id="orderConfirm_user" resultType="hashmap">
		select user_name,user_address,user_phone from user_info where user_id=#{param1}
	</select>
	<select id="orderConfirm_board" resultType="hashmap">
		SELECT board_no,board_title,groupbuy_unitprice FROM board INNER JOIN groupbuy_addit USING (board_no) WHERE board_no = #{param1}
	</select>

	<insert id="orderrequest"
		useGeneratedKeys="true"
		keyColumn="order_no"
		keyProperty="order_no"
		parameterType="com.gong.gu.dto.Order_infoDTO">
		INSERT INTO order_info(user_id,order_name,order_address,order_phone,Board_no,order_quantity)
		VALUES
		(#{user_id},#{order_name},#{order_address},#{order_phone},#{board_no},#{order_quantity})
	
	</insert>
	
	
	<select id="emailIdentify" resultType="string">
	SELECT user_email FROM user_info WHERE user_email = #{param1}
	
	</select>
	
	<update id="profileUpdate">
	UPDATE user_info SET user_pw=#{user_pw},user_name= #{user_name},user_birth = #{user_birth},user_address = #{user_address},user_phone = #{user_phone},user_email = #{user_email} 
	WHERE user_id= #{user_id}
	</update>
	
	<select id="groupbuydetail" resultType="hashmap">
	SELECT * FROM board INNER JOIN groupbuy_addit USING (board_no) WHERE board_no =  #{param1}
	</select>
	
	<select id="orderquansum" resultType="string">
	SELECT sum(order_quantity) FROM order_info WHERE board_no = #{param1} AND (order_state = '신청완료' OR order_state = '배송완료');
	</select>
	
	<select id="photolist" resultType="hashmap">
	SELECT * FROM photo WHERE board_no = #{param1}
	</select>

</mapper>